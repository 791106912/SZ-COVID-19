{"version":3,"sources":["webpack:///./node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./node_modules/echarts/lib/component/axis/AxisBuilder.js"],"names":["zrUtil","layout","gridModel","axisModel","opt","grid","coordinateSystem","axis","otherAxisOnZeroOf","getAxesOnZeroOf","rawAxisPosition","position","axisPosition","axisDim","dim","rect","getRect","rectBound","x","width","y","height","idx","left","right","top","bottom","onZero","axisOffset","get","posBound","onZeroCoord","toGlobalCoord","dataToCoord","Math","max","min","rotation","PI","dirMap","labelDirection","tickDirection","nameDirection","labelOffset","retrieve","labelInside","labelRotate","z2","exports","_config","echarts","__DEV__","axisPointerModelHelper","AxisView","extendComponentView","type","_axisPointer","axisPointerClass","render","ecModel","api","payload","this","fixValue","superApply","arguments","updateAxisPointer","force","remove","axisPointer","dispose","disposeAxisPointer","axisView","forceRender","Clazz","getAxisPointerClass","axisPointerModel","getAxisPointerModel","axisPointerClazz","registerAxisPointerClass","clazz","_default","module","_dataProvider","retrieveRawValue","getDefaultLabel","data","dataIndex","labelDims","mapDimension","len","length","vals","i","val","push","join","Model","each","curry","collect","result","axesInfo","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","getComponent","globalAxisPointerModel","linksOption","linkGroups","getCoordinateSystems","coordSys","axisPointerEnabled","coordSysKey","makeKey","model","axesInfoInCoordSys","coordSysModel","baseTooltipModel","getModel","getAxes","saveTooltipAxisInfo","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","fromTooltip","triggerTooltip","axisPointerShow","isHandleTrigger","makeAxisPointerModel","snap","key","involveSeries","axisInfo","useHandle","seriesModels","groupIndex","getLinkGroupIndex","linkGroup","mapper","tooltipAxisPointerModel","volatileOption","field","clone","labelOption","label","show","tooltipAxisPointerLabelShow","crossStyle","lineStyle","defaults","textStyle","eachSeries","seriesModel","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","getData","count","linkOption","checkPropInLink","id","componentIndex","name","linkPropValue","axisPropValue","isArray","indexOf","getAxisInfo","scale","option","status","value","parse","extent","getExtent","slice","reverse","isBlank","_util","extend","formatUtil","graphic","_number","isRadianAroundZero","remRadian","_symbol","createSymbol","matrixUtil","_vector","v2ApplyTransform","applyTransform","_axisHelper","shouldShowAllLabels","AxisBuilder","silent","group","Group","dumbGroup","updateTransform","_transform","transform","_dumbGroup","prototype","constructor","hasBuilder","builders","add","call","getGroup","axisLine","matrix","pt1","pt2","lineCap","getLineStyle","Line","anid","subPixelOptimize","shape","x1","y1","x2","y2","style","strokeContainThreshold","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","rotate","offset","r","sqrt","point","index","symbol","stroke","pos","cos","sin","attr","axisTickLabel","ticksEls","buildAxisMajorTicks","labelEls","buildAxisLabel","fixMinMaxLabelShow","buildAxisMinorTicks","axisName","labelLayout","axisNameAvailableWidth","nameLocation","textStyleModel","gap","gapSignal","isNameLocationCenter","nameRotation","innerTextLayout","endTextLayout","abs","isFinite","textFont","getFont","truncateOpt","ellipsis","maxWidth","nameTruncateMaxWidth","truncatedText","truncateText","minChar","placeholder","tooltipOpt","mainType","formatterParams","componentType","$vars","textEl","Text","__fullText","__truncatedText","isLabelSilent","tooltip","content","formatter","setTextStyle","text","textFill","getTextColor","textAlign","textVerticalAlign","eventData","makeAxisEventDataBase","targetType","decomposeTransform","axisRotation","textRotation","direction","rotationDiff","textPosition","textRotate","inverse","onLeft","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","el","ignore","current","next","firstRect","getBoundingRect","nextRect","mRotationBack","identity","mul","getLocalTransform","intersect","createTicks","ticksCoords","tickTransform","tickEndCoord","tickLineStyle","aniid","tickCoord","coord","tickEl","tickValue","axisBuilder","tickModel","lineStyleModel","getTicksCoords","minorTickModel","minorTicksCoords","getMinorTicksCoords","minorTickLineStyle","minorTicksEls","k","axisLabelShow","labelModel","labelMargin","labels","getViewLabels","labelRotation","rawCategoryData","getCategories","triggerEvent","labelItem","formattedLabel","rawLabel","itemLabelModel","textColor","getShallow"],"mappings":"qGAoBA,IAAIA,EAAS,EAAQ,QA+BrB,SAASC,EAAOC,EAAWC,EAAWC,GACpCA,EAAMA,GAAO,GACb,IAAIC,EAAOH,EAAUI,iBACjBC,EAAOJ,EAAUI,KACjBN,EAAS,GACTO,EAAoBD,EAAKE,kBAAkB,GAC3CC,EAAkBH,EAAKI,SACvBC,EAAeJ,EAAoB,SAAWE,EAC9CG,EAAUN,EAAKO,IACfC,EAAOV,EAAKW,UACZC,EAAY,CAACF,EAAKG,EAAGH,EAAKG,EAAIH,EAAKI,MAAOJ,EAAKK,EAAGL,EAAKK,EAAIL,EAAKM,QAChEC,EAAM,CACRC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,EACRC,OAAQ,GAENC,EAAazB,EAAU0B,IAAI,WAAa,EACxCC,EAAuB,MAAZjB,EAAkB,CAACI,EAAU,GAAKW,EAAYX,EAAU,GAAKW,GAAc,CAACX,EAAU,GAAKW,EAAYX,EAAU,GAAKW,GAErI,GAAIpB,EAAmB,CACrB,IAAIuB,EAAcvB,EAAkBwB,cAAcxB,EAAkByB,YAAY,IAChFH,EAASR,EAAIK,QAAUO,KAAKC,IAAID,KAAKE,IAAIL,EAAaD,EAAS,IAAKA,EAAS,IAI/E7B,EAAOU,SAAW,CAAa,MAAZE,EAAkBiB,EAASR,EAAIV,IAAiBK,EAAU,GAAgB,MAAZJ,EAAkBiB,EAASR,EAAIV,IAAiBK,EAAU,IAE3IhB,EAAOoC,SAAWH,KAAKI,GAAK,GAAiB,MAAZzB,EAAkB,EAAI,GAEvD,IAAI0B,EAAS,CACXd,KAAM,EACNC,OAAQ,EACRH,MAAO,EACPC,MAAO,GAETvB,EAAOuC,eAAiBvC,EAAOwC,cAAgBxC,EAAOyC,cAAgBH,EAAO7B,GAC7ET,EAAO0C,YAAcnC,EAAoBsB,EAASR,EAAIZ,IAAoBoB,EAASR,EAAIK,QAAU,EAE7FxB,EAAU0B,IAAI,qBAChB5B,EAAOwC,eAAiBxC,EAAOwC,eAG7BzC,EAAO4C,SAASxC,EAAIyC,YAAa1C,EAAU0B,IAAI,uBACjD5B,EAAOuC,gBAAkBvC,EAAOuC,gBAIlC,IAAIM,EAAc3C,EAAU0B,IAAI,oBAIhC,OAHA5B,EAAO6C,YAA+B,QAAjBlC,GAA0BkC,EAAcA,EAE7D7C,EAAO8C,GAAK,EACL9C,EAGT+C,EAAQ/C,OAASA,G,qBCvFjB,IAAIgD,EAAU,EAAQ,QAIlBC,GAFUD,EAAQE,QAER,EAAQ,SAElBC,EAAyB,EAAQ,QAwBjCC,EAAWH,EAAQI,oBAAoB,CACzCC,KAAM,OAKNC,aAAc,KAMdC,iBAAkB,KAKlBC,OAAQ,SAAUvD,EAAWwD,EAASC,EAAKC,GAMzCC,KAAKL,kBAAoBL,EAAuBW,SAAS5D,GACzDkD,EAASW,WAAWF,KAAM,SAAUG,WACpCC,EAAkBJ,KAAM3D,EAAWwD,EAASC,EAAKC,GAAS,IAW5DK,kBAAmB,SAAU/D,EAAWwD,EAASC,EAAKC,EAASM,GAC7DD,EAAkBJ,KAAM3D,EAAWwD,EAASC,EAAKC,GAAS,IAM5DO,OAAQ,SAAUT,EAASC,GACzB,IAAIS,EAAcP,KAAKN,aACvBa,GAAeA,EAAYD,OAAOR,GAClCP,EAASW,WAAWF,KAAM,SAAUG,YAMtCK,QAAS,SAAUX,EAASC,GAC1BW,EAAmBT,KAAMF,GACzBP,EAASW,WAAWF,KAAM,UAAWG,cAIzC,SAASC,EAAkBM,EAAUrE,EAAWwD,EAASC,EAAKC,EAASY,GACrE,IAAIC,EAAQrB,EAASsB,oBAAoBH,EAASf,kBAElD,GAAKiB,EAAL,CAIA,IAAIE,EAAmBxB,EAAuByB,oBAAoB1E,GAClEyE,GAAoBJ,EAAShB,eAAiBgB,EAAShB,aAAe,IAAIkB,IAAUhB,OAAOvD,EAAWyE,EAAkBhB,EAAKa,GAAeF,EAAmBC,EAAUZ,IAG3K,SAASW,EAAmBC,EAAUb,EAASC,GAC7C,IAAIS,EAAcG,EAAShB,aAC3Ba,GAAeA,EAAYC,QAAQX,EAASC,GAC5CY,EAAShB,aAAe,KAG1B,IAAIsB,EAAmB,GAEvBzB,EAAS0B,yBAA2B,SAAUxB,EAAMyB,GAClDF,EAAiBvB,GAAQyB,GAG3B3B,EAASsB,oBAAsB,SAAUpB,GACvC,OAAOA,GAAQuB,EAAiBvB,IAGlC,IAAI0B,EAAW5B,EACf6B,EAAOlC,QAAUiC,G,qBCpHjB,IAAIE,EAAgB,EAAQ,QAExBC,EAAmBD,EAAcC,iBA0BrC,SAASC,EAAgBC,EAAMC,GAC7B,IAAIC,EAAYF,EAAKG,aAAa,kBAAkB,GAChDC,EAAMF,EAAUG,OAEpB,GAAY,IAARD,EACF,OAAON,EAAiBE,EAAMC,EAAWC,EAAU,IAC9C,GAAIE,EAAK,CAGd,IAFA,IAAIE,EAAO,GAEFC,EAAI,EAAGA,EAAIL,EAAUG,OAAQE,IAAK,CACzC,IAAIC,EAAMV,EAAiBE,EAAMC,EAAWC,EAAUK,IACtDD,EAAKG,KAAKD,GAGZ,OAAOF,EAAKI,KAAK,MAIrBhD,EAAQqC,gBAAkBA,G,qBC9C1B,IAAIrF,EAAS,EAAQ,QAEjBiG,EAAQ,EAAQ,QAoBhBC,EAAOlG,EAAOkG,KACdC,EAAQnG,EAAOmG,MAGnB,SAASC,EAAQzC,EAASC,GACxB,IAAIyC,EAAS,CAcXC,SAAU,GACVC,gBAAgB,EAMhBC,iBAAkB,GAClBC,YAAa,IAKf,OAHAC,EAAgBL,EAAQ1C,EAASC,GAEjCyC,EAAOE,gBAAkBI,EAAkBN,EAAQ1C,GAC5C0C,EAGT,SAASK,EAAgBL,EAAQ1C,EAASC,GACxC,IAAIgD,EAAqBjD,EAAQkD,aAAa,WAC1CC,EAAyBnD,EAAQkD,aAAa,eAE9CE,EAAcD,EAAuBjF,IAAI,QAAQ,IAAS,GAC1DmF,EAAa,GAEjBd,EAAKtC,EAAIqD,wBAAwB,SAAUC,GAEzC,GAAKA,EAASC,mBAAd,CAIA,IAAIC,EAAcC,EAAQH,EAASI,OAC/BC,EAAqBlB,EAAOG,iBAAiBY,GAAe,GAChEf,EAAOI,YAAYW,GAAeF,EAGlC,IAAIM,EAAgBN,EAASI,MACzBG,EAAmBD,EAAcE,SAAS,UAAWd,GAIzD,GAHAV,EAAKgB,EAASS,UAAWxB,EAAMyB,GAAqB,EAAO,OAGvDV,EAASW,gBAAkBjB,GAE5Ba,EAAiB5F,IAAI,QAAS,CAG/B,IAAIiG,EAAkD,SAApCL,EAAiB5F,IAAI,WACnCkG,EAAqD,UAA7CN,EAAiB5F,IAAI,oBAC7BmG,EAAcd,EAASW,eAAeJ,EAAiB5F,IAAI,sBAE3DiG,GAAeC,IACjB7B,EAAK8B,EAAYC,SAAU9B,EAAMyB,GAAqBG,GAAQ,QAAgBD,IAG5EC,GACF7B,EAAK8B,EAAYE,UAAW/B,EAAMyB,EAAqB,SAAS,KAMpE,SAASA,EAAoBO,EAAaC,EAAgB7H,GACxD,IAAIqE,EAAmBrE,EAAK+G,MAAMI,SAAS,cAAeZ,GACtDuB,EAAkBzD,EAAiB/C,IAAI,QAE3C,GAAKwG,IAAuC,SAApBA,GAA+BF,GAAgBG,EAAgB1D,IAAvF,CAIsB,MAAlBwD,IACFA,EAAiBxD,EAAiB/C,IAAI,mBAGxC+C,EAAmBuD,EAAcI,EAAqBhI,EAAMkH,EAAkBX,EAAwBnD,EAASwE,EAAaC,GAAkBxD,EAC9I,IAAI4D,EAAO5D,EAAiB/C,IAAI,QAC5B4G,EAAMpB,EAAQ9G,EAAK+G,OACnBoB,EAAgBN,GAAkBI,GAAsB,aAAdjI,EAAKgD,KAE/CoF,EAAWtC,EAAOC,SAASmC,GAAO,CACpCA,IAAKA,EACLlI,KAAMA,EACN2G,SAAUA,EACVtC,iBAAkBA,EAClBwD,eAAgBA,EAChBM,cAAeA,EACfF,KAAMA,EACNI,UAAWN,EAAgB1D,GAC3BiE,aAAc,IAEhBtB,EAAmBkB,GAAOE,EAC1BtC,EAAOE,gBAAkBmC,EACzB,IAAII,EAAaC,EAAkBhC,EAAaxG,GAEhD,GAAkB,MAAduI,EAAoB,CACtB,IAAIE,EAAYhC,EAAW8B,KAAgB9B,EAAW8B,GAAc,CAClExC,SAAU,KAEZ0C,EAAU1C,SAASmC,GAAOE,EAC1BK,EAAUC,OAASlC,EAAY+B,GAAYG,OAC3CN,EAASK,UAAYA,QAM7B,SAAST,EAAqBhI,EAAMkH,EAAkBX,EAAwBnD,EAASwE,EAAaC,GAClG,IAAIc,EAA0BzB,EAAiBC,SAAS,eACpDyB,EAAiB,GACrBjD,EAAK,CAAC,OAAQ,OAAQ,YAAa,cAAe,QAAS,YAAa,0BAA2B,wBAAyB,MAAM,SAAUkD,GAC1ID,EAAeC,GAASpJ,EAAOqJ,MAAMH,EAAwBrH,IAAIuH,OAKnED,EAAeX,KAAqB,aAAdjI,EAAKgD,QAAyB6E,EAGR,UAAxCc,EAAwBrH,IAAI,UAC9BsH,EAAe5F,KAAO,QAGxB,IAAI+F,EAAcH,EAAeI,QAAUJ,EAAeI,MAAQ,IAIlE,GAFoB,MAApBD,EAAYE,OAAiBF,EAAYE,MAAO,GAE5B,UAAhBrB,EAAyB,CAE3B,IAAIsB,EAA8BP,EAAwBrH,IAAI,cAI9D,GAHAyH,EAAYE,KAAsC,MAA/BC,GAAsCA,GAGpDrB,EAAgB,CACnB,IAAIsB,EAAaP,EAAeQ,UAAYT,EAAwBrH,IAAI,cACxE6H,GAAc1J,EAAO4J,SAASN,EAAaI,EAAWG,YAI1D,OAAOtJ,EAAK+G,MAAMI,SAAS,cAAe,IAAIzB,EAAMkD,EAAgBrC,EAAwBnD,IAG9F,SAASgD,EAAkBN,EAAQ1C,GAEjCA,EAAQmG,YAAW,SAAUC,GAE3B,IAAI7C,EAAW6C,EAAYzJ,iBACvB0J,EAAuBD,EAAYlI,IAAI,mBAAmB,GAC1DoI,EAAoBF,EAAYlI,IAAI,gBAAgB,GAEnDqF,GAAqC,SAAzB8C,IAA4D,IAAzBA,GAA2D,SAAzBA,IAAyD,IAAtBC,IAA6E,IAA9CF,EAAYlI,IAAI,oBAAoB,IAI5LqE,EAAKG,EAAOG,iBAAiBa,EAAQH,EAASI,SAAS,SAAUqB,GAC/D,IAAIpI,EAAOoI,EAASpI,KAEhB2G,EAASgD,QAAQ3J,EAAKO,OAASP,IACjCoI,EAASE,aAAa9C,KAAKgE,GACC,MAA5BpB,EAASwB,kBAA4BxB,EAASwB,gBAAkB,GAChExB,EAASwB,iBAAmBJ,EAAYK,UAAUC,cAGrDvG,MAkBL,SAASiF,EAAkBhC,EAAaxG,GAItC,IAHA,IAAIJ,EAAYI,EAAK+G,MACjBxG,EAAMP,EAAKO,IAEN+E,EAAI,EAAGA,EAAIkB,EAAYpB,OAAQE,IAAK,CAC3C,IAAIyE,EAAavD,EAAYlB,IAAM,GAEnC,GAAI0E,EAAgBD,EAAWxJ,EAAM,UAAWX,EAAUqK,KAAOD,EAAgBD,EAAWxJ,EAAM,aAAcX,EAAUsK,iBAAmBF,EAAgBD,EAAWxJ,EAAM,YAAaX,EAAUuK,MACnM,OAAO7E,GAKb,SAAS0E,EAAgBI,EAAeC,GACtC,MAAyB,QAAlBD,GAA2B3K,EAAO6K,QAAQF,IAAkB3K,EAAO8K,QAAQH,EAAeC,IAAkB,GAAKD,IAAkBC,EAG5I,SAAS7G,EAAS5D,GAChB,IAAIwI,EAAWoC,EAAY5K,GAE3B,GAAKwI,EAAL,CAIA,IAAI/D,EAAmB+D,EAAS/D,iBAC5BoG,EAAQrC,EAASpI,KAAKyK,MACtBC,EAASrG,EAAiBqG,OAC1BC,EAAStG,EAAiB/C,IAAI,UAC9BsJ,EAAQvG,EAAiB/C,IAAI,SAEpB,MAATsJ,IACFA,EAAQH,EAAMI,MAAMD,IAGtB,IAAIvC,EAAYN,EAAgB1D,GAGlB,MAAVsG,IACFD,EAAOC,OAAStC,EAAY,OAAS,QAGvC,IAAIyC,EAASL,EAAMM,YAAYC,QAC/BF,EAAO,GAAKA,EAAO,IAAMA,EAAOG,WAGvB,MAATL,GAEGA,EAAQE,EAAO,MAEhBF,EAAQE,EAAO,IAGbF,EAAQE,EAAO,KACjBF,EAAQE,EAAO,IAGjBJ,EAAOE,MAAQA,EAEXvC,IACFqC,EAAOC,OAASvC,EAASpI,KAAKyK,MAAMS,UAAY,OAAS,SAI7D,SAASV,EAAY5K,GACnB,IAAIqG,GAAoBrG,EAAUwD,QAAQkD,aAAa,gBAAkB,IAAIL,iBAC7E,OAAOA,GAAoBA,EAAiBF,SAASe,EAAQlH,IAG/D,SAAS0E,EAAoB1E,GAC3B,IAAIwI,EAAWoC,EAAY5K,GAC3B,OAAOwI,GAAYA,EAAS/D,iBAG9B,SAAS0D,EAAgB1D,GACvB,QAASA,EAAiB/C,IAAI,eAQhC,SAASwF,EAAQC,GACf,OAAOA,EAAM/D,KAAO,KAAO+D,EAAMkD,GAGnCxH,EAAQoD,QAAUA,EAClBpD,EAAQe,SAAWA,EACnBf,EAAQ+H,YAAcA,EACtB/H,EAAQ6B,oBAAsBA,EAC9B7B,EAAQqE,QAAUA,G,qBCpTlB,IAAIqE,EAAQ,EAAQ,QAEhB9I,EAAW8I,EAAM9I,SACjBgH,EAAW8B,EAAM9B,SACjB+B,EAASD,EAAMC,OACfzF,EAAOwF,EAAMxF,KAEb0F,EAAa,EAAQ,QAErBC,EAAU,EAAQ,QAElB5F,EAAQ,EAAQ,QAEhB6F,EAAU,EAAQ,QAElBC,EAAqBD,EAAQC,mBAC7BC,EAAYF,EAAQE,UAEpBC,EAAU,EAAQ,QAElBC,EAAeD,EAAQC,aAEvBC,EAAa,EAAQ,QAErBC,EAAU,EAAQ,QAElBC,EAAmBD,EAAQE,eAE3BC,EAAc,EAAQ,QAEtBC,EAAsBD,EAAYC,oBAoBlClK,EAAKJ,KAAKI,GAwCVmK,EAAc,SAAUtM,EAAWC,GAIrC0D,KAAK1D,IAAMA,EAKX0D,KAAK3D,UAAYA,EAEjByJ,EAASxJ,EAAK,CACZuC,YAAa,EACbD,cAAe,EACfD,cAAe,EACfD,eAAgB,EAChBkK,QAAQ,IAMV5I,KAAK6I,MAAQ,IAAId,EAAQe,MAEzB,IAAIC,EAAY,IAAIhB,EAAQe,MAAM,CAChCjM,SAAUP,EAAIO,SAAS4K,QACvBlJ,SAAUjC,EAAIiC,WAIhBwK,EAAUC,kBACVhJ,KAAKiJ,WAAaF,EAAUG,UAC5BlJ,KAAKmJ,WAAaJ,GAGpBJ,EAAYS,UAAY,CACtBC,YAAaV,EACbW,WAAY,SAAU1C,GACpB,QAAS2C,EAAS3C,IAEpB4C,IAAK,SAAU5C,GACb2C,EAAS3C,GAAM6C,KAAKzJ,OAEtB0J,SAAU,WACR,OAAO1J,KAAK6I,QAGhB,IAAIU,EAAW,CAIbI,SAAU,WACR,IAAIrN,EAAM0D,KAAK1D,IACXD,EAAY2D,KAAK3D,UAErB,GAAKA,EAAU0B,IAAI,iBAAnB,CAIA,IAAIwJ,EAASvH,KAAK3D,UAAUI,KAAK+K,YAC7BoC,EAAS5J,KAAKiJ,WACdY,EAAM,CAACtC,EAAO,GAAI,GAClBuC,EAAM,CAACvC,EAAO,GAAI,GAElBqC,IACFrB,EAAiBsB,EAAKA,EAAKD,GAC3BrB,EAAiBuB,EAAKA,EAAKF,IAG7B,IAAI/D,EAAYgC,EAAO,CACrBkC,QAAS,SACR1N,EAAUuH,SAAS,sBAAsBoG,gBAC5ChK,KAAK6I,MAAMW,IAAI,IAAIzB,EAAQkC,KAAK,CAE9BC,KAAM,OACNC,kBAAkB,EAClBC,MAAO,CACLC,GAAIR,EAAI,GACRS,GAAIT,EAAI,GACRU,GAAIT,EAAI,GACRU,GAAIV,EAAI,IAEVW,MAAO5E,EACP6E,uBAAwBpO,EAAIoO,wBAA0B,EACtD9B,QAAQ,EACR3J,GAAI,KAEN,IAAI0L,EAAStO,EAAU0B,IAAI,mBACvB6M,EAAYvO,EAAU0B,IAAI,uBAC1B8M,EAAcxO,EAAU0B,IAAI,0BAA4B,EAM5D,GAJ2B,kBAAhB8M,IACTA,EAAc,CAACA,EAAaA,IAGhB,MAAVF,EAAgB,CACI,kBAAXA,IAETA,EAAS,CAACA,EAAQA,IAGK,kBAAdC,GAA+C,kBAAdA,IAE1CA,EAAY,CAACA,EAAWA,IAG1B,IAAIE,EAAcF,EAAU,GACxBG,EAAeH,EAAU,GAC7BxI,EAAK,CAAC,CACJ4I,OAAQ1O,EAAIiC,SAAWH,KAAKI,GAAK,EACjCyM,OAAQJ,EAAY,GACpBK,EAAG,GACF,CACDF,OAAQ1O,EAAIiC,SAAWH,KAAKI,GAAK,EACjCyM,OAAQJ,EAAY,GACpBK,EAAG9M,KAAK+M,MAAMtB,EAAI,GAAKC,EAAI,KAAOD,EAAI,GAAKC,EAAI,KAAOD,EAAI,GAAKC,EAAI,KAAOD,EAAI,GAAKC,EAAI,QACrF,SAAUsB,EAAOC,GACnB,GAAsB,SAAlBV,EAAOU,IAAsC,MAAjBV,EAAOU,GAAgB,CACrD,IAAIC,EAASlD,EAAauC,EAAOU,IAASP,EAAc,GAAIC,EAAe,EAAGD,EAAaC,EAAclF,EAAU0F,QAAQ,GAEvHL,EAAIE,EAAMF,EAAIE,EAAMH,OACpBO,EAAM,CAAC3B,EAAI,GAAKqB,EAAI9M,KAAKqN,IAAInP,EAAIiC,UAAWsL,EAAI,GAAKqB,EAAI9M,KAAKsN,IAAIpP,EAAIiC,WAC1E+M,EAAOK,KAAK,CACVpN,SAAU6M,EAAMJ,OAChBnO,SAAU2O,EACV5C,QAAQ,EACR3J,GAAI,KAENe,KAAK6I,MAAMW,IAAI8B,MAEhBtL,SAOP4L,cAAe,WACb,IAAIvP,EAAY2D,KAAK3D,UACjBC,EAAM0D,KAAK1D,IACXuP,EAAWC,EAAoB9L,KAAM3D,EAAWC,GAChDyP,EAAWC,EAAehM,KAAM3D,EAAWC,GAC/C2P,EAAmB5P,EAAW0P,EAAUF,GACxCK,EAAoBlM,KAAM3D,EAAWC,IAMvC6P,SAAU,WACR,IAAI7P,EAAM0D,KAAK1D,IACXD,EAAY2D,KAAK3D,UACjBuK,EAAO9H,EAASxC,EAAI6P,SAAU9P,EAAU0B,IAAI,SAEhD,GAAK6I,EAAL,CAIA,IASIwF,EAOAC,EAhBAC,EAAejQ,EAAU0B,IAAI,gBAC7Ba,EAAgBtC,EAAIsC,cACpB2N,EAAiBlQ,EAAUuH,SAAS,iBACpC4I,EAAMnQ,EAAU0B,IAAI,YAAc,EAClCwJ,EAASvH,KAAK3D,UAAUI,KAAK+K,YAC7BiF,EAAYlF,EAAO,GAAKA,EAAO,IAAM,EAAI,EACzCiE,EAAM,CAAkB,UAAjBc,EAA2B/E,EAAO,GAAKkF,EAAYD,EAAuB,QAAjBF,EAAyB/E,EAAO,GAAKkF,EAAYD,GAAOjF,EAAO,GAAKA,EAAO,IAAM,EAErJmF,EAAqBJ,GAAgBhQ,EAAIuC,YAAcD,EAAgB4N,EAAM,GAEzEG,EAAetQ,EAAU0B,IAAI,cAEb,MAAhB4O,IACFA,EAAeA,EAAenO,EAAK,KAKjCkO,EAAqBJ,GACvBF,EAAcQ,EAAgBtQ,EAAIiC,SAA0B,MAAhBoO,EAAuBA,EAAerQ,EAAIiC,SACtFK,IAEAwN,EAAcS,EAAcvQ,EAAKgQ,EAAcK,GAAgB,EAAGpF,GAClE8E,EAAyB/P,EAAI+P,uBAEC,MAA1BA,IACFA,EAAyBjO,KAAK0O,IAAIT,EAAyBjO,KAAKsN,IAAIU,EAAY7N,YAC/EwO,SAASV,KAA4BA,EAAyB,QAInE,IAAIW,EAAWT,EAAeU,UAC1BC,EAAc7Q,EAAU0B,IAAI,gBAAgB,IAAS,GACrDoP,EAAWD,EAAYC,SACvBC,EAAWtO,EAASxC,EAAI+Q,qBAAsBH,EAAYE,SAAUf,GAGpEiB,EAA4B,MAAZH,GAAgC,MAAZC,EAAmBtF,EAAWyF,aAAa3G,EAAMwG,EAAUJ,EAAUG,EAAU,CACrHK,QAAS,EACTC,YAAaP,EAAYO,cACtB7G,EACD8G,EAAarR,EAAU0B,IAAI,WAAW,GACtC4P,EAAWtR,EAAUsR,SACrBC,EAAkB,CACpBC,cAAeF,EACf/G,KAAMA,EACNkH,MAAO,CAAC,SAEVF,EAAgBD,EAAW,SAAWtR,EAAUsK,eAChD,IAAIoH,EAAS,IAAIhG,EAAQiG,KAAK,CAE5B9D,KAAM,OACN+D,WAAYrH,EACZsH,gBAAiBZ,EACjBzQ,SAAU2O,EACVjN,SAAU6N,EAAY7N,SACtBqK,OAAQuF,EAAc9R,GACtB4C,GAAI,EACJmP,QAASV,GAAcA,EAAWhI,KAAOmC,EAAO,CAC9CwG,QAASzH,EACT0H,UAAW,WACT,OAAO1H,GAETgH,gBAAiBA,GAChBF,GAAc,OAEnB3F,EAAQwG,aAAaR,EAAOtD,MAAO8B,EAAgB,CACjDiC,KAAMlB,EACNN,SAAUA,EACVyB,SAAUlC,EAAemC,gBAAkBrS,EAAU0B,IAAI,4BACzD4Q,UAAWpC,EAAexO,IAAI,UAAYqO,EAAYuC,UACtDC,kBAAmBrC,EAAexO,IAAI,kBAAoBqO,EAAYwC,oBAGpEvS,EAAU0B,IAAI,kBAChBgQ,EAAOc,UAAYC,EAAsBzS,GACzC0R,EAAOc,UAAUE,WAAa,WAC9BhB,EAAOc,UAAUjI,KAAOA,GAI1B5G,KAAKmJ,WAAWK,IAAIuE,GAEpBA,EAAO/E,kBACPhJ,KAAK6I,MAAMW,IAAIuE,GACfA,EAAOiB,wBAIPF,EAAwBnG,EAAYmG,sBAAwB,SAAUzS,GACxE,IAAIwS,EAAY,CACdhB,cAAexR,EAAUsR,SACzBhH,eAAgBtK,EAAUsK,gBAG5B,OADAkI,EAAUxS,EAAUsR,SAAW,SAAWtR,EAAUsK,eAC7CkI,GAiBLjC,EAAkBjE,EAAYiE,gBAAkB,SAAUqC,EAAcC,EAAcC,GACxF,IACIR,EACAC,EAFAQ,EAAelH,EAAUgH,EAAeD,GAsB5C,OAlBIhH,EAAmBmH,IAErBR,EAAoBO,EAAY,EAAI,MAAQ,SAC5CR,EAAY,UACH1G,EAAmBmH,EAAe5Q,IAE3CoQ,EAAoBO,EAAY,EAAI,SAAW,MAC/CR,EAAY,WAEZC,EAAoB,SAGlBD,EADES,EAAe,GAAKA,EAAe5Q,EACzB2Q,EAAY,EAAI,QAAU,OAE1BA,EAAY,EAAI,OAAS,SAIlC,CACL5Q,SAAU6Q,EACVT,UAAWA,EACXC,kBAAmBA,IAIvB,SAAS/B,EAAcvQ,EAAK+S,EAAcC,EAAY/H,GACpD,IACIoH,EACAC,EAFAQ,EAAelH,EAAUoH,EAAahT,EAAIiC,UAG1CgR,EAAUhI,EAAO,GAAKA,EAAO,GAC7BiI,EAA0B,UAAjBH,IAA6BE,GAA4B,UAAjBF,GAA4BE,EAkBjF,OAhBItH,EAAmBmH,EAAe5Q,EAAK,IACzCoQ,EAAoBY,EAAS,SAAW,MACxCb,EAAY,UACH1G,EAAmBmH,EAAoB,IAAL5Q,IAC3CoQ,EAAoBY,EAAS,MAAQ,SACrCb,EAAY,WAEZC,EAAoB,SAGlBD,EADES,EAAoB,IAAL5Q,GAAY4Q,EAAe5Q,EAAK,EACrCgR,EAAS,OAAS,QAElBA,EAAS,QAAU,QAI5B,CACLjR,SAAU6Q,EACVT,UAAWA,EACXC,kBAAmBA,GAIvB,IAAIT,EAAgBxF,EAAYwF,cAAgB,SAAU9R,GACxD,IAAIqR,EAAarR,EAAU0B,IAAI,WAC/B,OAAO1B,EAAU0B,IAAI,aAChB1B,EAAU0B,IAAI,iBAAmB2P,GAAcA,EAAWhI,OAGjE,SAASuG,EAAmB5P,EAAW0P,EAAU0D,GAC/C,IAAI/G,EAAoBrM,EAAUI,MAAlC,CAOA,IAAIiT,EAAerT,EAAU0B,IAAI,0BAC7B4R,EAAetT,EAAU0B,IAAI,0BAGjCgO,EAAWA,GAAY,GACvB0D,EAAUA,GAAW,GACrB,IAAIG,EAAa7D,EAAS,GACtB8D,EAAY9D,EAAS,GACrB+D,EAAY/D,EAASA,EAASlK,OAAS,GACvCkO,EAAYhE,EAASA,EAASlK,OAAS,GACvCmO,EAAYP,EAAQ,GACpBQ,EAAWR,EAAQ,GACnBS,EAAWT,EAAQA,EAAQ5N,OAAS,GACpCsO,EAAWV,EAAQA,EAAQ5N,OAAS,IAEnB,IAAjB6N,GACFU,EAASR,GACTQ,EAASJ,IACAK,EAAqBT,EAAYC,KACtCH,GACFU,EAASP,GACTO,EAASH,KAETG,EAASR,GACTQ,EAASJ,MAIQ,IAAjBL,GACFS,EAASN,GACTM,EAASF,IACAG,EAAqBN,EAAWD,KACrCH,GACFS,EAASL,GACTK,EAASD,KAETC,EAASN,GACTM,EAASF,MAKf,SAASE,EAASE,GAChBA,IAAOA,EAAGC,QAAS,GAGrB,SAASF,EAAqBG,EAASC,EAAMrE,GAE3C,IAAIsE,EAAYF,GAAWA,EAAQG,kBAAkBpL,QACjDqL,EAAWH,GAAQA,EAAKE,kBAAkBpL,QAE9C,GAAKmL,GAAcE,EAAnB,CAMA,IAAIC,EAAgBxI,EAAWyI,SAAS,IAIxC,OAHAzI,EAAW2C,OAAO6F,EAAeA,GAAgBL,EAAQjS,UACzDmS,EAAUlI,eAAeH,EAAW0I,IAAI,GAAIF,EAAeL,EAAQQ,sBACnEJ,EAASpI,eAAeH,EAAW0I,IAAI,GAAIF,EAAeJ,EAAKO,sBACxDN,EAAUO,UAAUL,IAG7B,SAASlE,EAAqBJ,GAC5B,MAAwB,WAAjBA,GAA8C,WAAjBA,EAGtC,SAAS4E,EAAYC,EAAaC,EAAeC,EAAcC,EAAeC,GAK5E,IAJA,IAAI9B,EAAU,GACV5F,EAAM,GACNC,EAAM,GAED/H,EAAI,EAAGA,EAAIoP,EAAYtP,OAAQE,IAAK,CAC3C,IAAIyP,EAAYL,EAAYpP,GAAG0P,MAC/B5H,EAAI,GAAK2H,EACT3H,EAAI,GAAK,EACTC,EAAI,GAAK0H,EACT1H,EAAI,GAAKuH,EAELD,IACF7I,EAAiBsB,EAAKA,EAAKuH,GAC3B7I,EAAiBuB,EAAKA,EAAKsH,IAI7B,IAAIM,EAAS,IAAI3J,EAAQkC,KAAK,CAE5BC,KAAMqH,EAAQ,IAAMJ,EAAYpP,GAAG4P,UACnCxH,kBAAkB,EAClBC,MAAO,CACLC,GAAIR,EAAI,GACRS,GAAIT,EAAI,GACRU,GAAIT,EAAI,GACRU,GAAIV,EAAI,IAEVW,MAAO6G,EACPrS,GAAI,EACJ2J,QAAQ,IAEV6G,EAAQxN,KAAKyP,GAGf,OAAOjC,EAGT,SAAS3D,EAAoB8F,EAAavV,EAAWC,GACnD,IAAIG,EAAOJ,EAAUI,KACjBoV,EAAYxV,EAAUuH,SAAS,YAEnC,GAAKiO,EAAU9T,IAAI,UAAWtB,EAAKyK,MAAMS,UAAzC,CAWA,IAPA,IAAImK,EAAiBD,EAAUjO,SAAS,aACpCyN,EAAe/U,EAAIqC,cAAgBkT,EAAU9T,IAAI,UACjDoT,EAAc1U,EAAKsV,iBACnBlG,EAAWqF,EAAYC,EAAaS,EAAY3I,WAAYoI,EAAcvL,EAASgM,EAAe9H,eAAgB,CACpHuB,OAAQlP,EAAU0B,IAAI,8BACpB,SAEKgE,EAAI,EAAGA,EAAI8J,EAAShK,OAAQE,IACnC6P,EAAY/I,MAAMW,IAAIqC,EAAS9J,IAGjC,OAAO8J,GAGT,SAASK,EAAoB0F,EAAavV,EAAWC,GACnD,IAAIG,EAAOJ,EAAUI,KACjBuV,EAAiB3V,EAAUuH,SAAS,aAExC,GAAKoO,EAAejU,IAAI,UAAWtB,EAAKyK,MAAMS,UAA9C,CAIA,IAAIsK,EAAmBxV,EAAKyV,sBAE5B,GAAKD,EAAiBpQ,OAUtB,IANA,IAAIiQ,EAAiBE,EAAepO,SAAS,aACzCyN,EAAe/U,EAAIqC,cAAgBqT,EAAejU,IAAI,UACtDoU,EAAqBrM,EAASgM,EAAe9H,eAAgBlE,EAASzJ,EAAUuH,SAAS,YAAYoG,eAAgB,CACvHuB,OAAQlP,EAAU0B,IAAI,+BAGfgE,EAAI,EAAGA,EAAIkQ,EAAiBpQ,OAAQE,IAG3C,IAFA,IAAIqQ,EAAgBlB,EAAYe,EAAiBlQ,GAAI6P,EAAY3I,WAAYoI,EAAcc,EAAoB,cAAgBpQ,GAEtHsQ,EAAI,EAAGA,EAAID,EAAcvQ,OAAQwQ,IACxCT,EAAY/I,MAAMW,IAAI4I,EAAcC,KAK1C,SAASrG,EAAe4F,EAAavV,EAAWC,GAC9C,IAAIG,EAAOJ,EAAUI,KACjBiJ,EAAO5G,EAASxC,EAAIgW,cAAejW,EAAU0B,IAAI,mBAErD,GAAK2H,IAAQjJ,EAAKyK,MAAMS,UAAxB,CAIA,IAAI4K,EAAalW,EAAUuH,SAAS,aAChC4O,EAAcD,EAAWxU,IAAI,UAC7B0U,EAAShW,EAAKiW,gBAEdC,GAAiB7T,EAASxC,EAAI0C,YAAauT,EAAWxU,IAAI,YAAc,GAAKS,EAAK,IAClF4N,EAAcQ,EAAgBtQ,EAAIiC,SAAUoU,EAAerW,EAAIoC,gBAC/DkU,EAAkBvW,EAAUwW,eAAiBxW,EAAUwW,eAAc,GACrE9G,EAAW,GACXnD,EAASuF,EAAc9R,GACvByW,EAAezW,EAAU0B,IAAI,gBAkDjC,OAjDAqE,EAAKqQ,GAAQ,SAAUM,EAAW1H,GAChC,IAAIsG,EAAYoB,EAAUpB,UACtBqB,EAAiBD,EAAUC,eAC3BC,EAAWF,EAAUE,SACrBC,EAAiBX,EAEjBK,GAAmBA,EAAgBjB,IAAciB,EAAgBjB,GAAW5L,YAC9EmN,EAAiB,IAAI/Q,EAAMyQ,EAAgBjB,GAAW5L,UAAWwM,EAAYlW,EAAUwD,UAGzF,IAAIsT,EAAYD,EAAexE,gBAAkBrS,EAAU0B,IAAI,4BAC3DyT,EAAY/U,EAAK0B,YAAYwT,GAC7BnG,EAAM,CAACgG,EAAWlV,EAAIuC,YAAcvC,EAAIoC,eAAiB8T,GACzDzE,EAAS,IAAIhG,EAAQiG,KAAK,CAE5B9D,KAAM,SAAWyH,EACjB9U,SAAU2O,EACVjN,SAAU6N,EAAY7N,SACtBqK,OAAQA,EACR3J,GAAI,KAEN8I,EAAQwG,aAAaR,EAAOtD,MAAOyI,EAAgB,CACjD1E,KAAMwE,EACNrE,UAAWuE,EAAeE,WAAW,SAAS,IAAShH,EAAYuC,UACnEC,kBAAmBsE,EAAeE,WAAW,iBAAiB,IAASF,EAAeE,WAAW,YAAY,IAAShH,EAAYwC,kBAClIH,SAA+B,oBAAd0E,EAA2BA,EAO9B,aAAd1W,EAAKgD,KAAsBwT,EAAyB,UAAdxW,EAAKgD,KAAmBkS,EAAY,GAAKA,EAAWtG,GAAS8H,IAGjGL,IACF/E,EAAOc,UAAYC,EAAsBzS,GACzC0R,EAAOc,UAAUE,WAAa,YAC9BhB,EAAOc,UAAUxH,MAAQ4L,GAI3BrB,EAAYzI,WAAWK,IAAIuE,GAE3BA,EAAO/E,kBACP+C,EAAS9J,KAAK8L,GACd6D,EAAY/I,MAAMW,IAAIuE,GACtBA,EAAOiB,wBAEFjD,GAGT,IAAI5K,EAAWwH,EACfvH,EAAOlC,QAAUiC","file":"js/chunk-1d3255f2.f6f5068f.js","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx.onZero] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx.onZero] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar shouldShowAllLabels = _axisHelper.shouldShowAllLabels;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line({\n      // Id for animation\n      anid: 'line',\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    }));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true,\n            z2: 11\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var ticksEls = buildAxisMajorTicks(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, ticksEls);\n    buildAxisMinorTicks(this, axisModel, opt);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isLabelSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: textStyleModel.get('align') || labelLayout.textAlign,\n      textVerticalAlign: textStyleModel.get('verticalAlign') || labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n\nvar makeAxisEventDataBase = AxisBuilder.makeAxisEventDataBase = function (axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType,\n    componentIndex: axisModel.componentIndex\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nvar isLabelSilent = AxisBuilder.isLabelSilent = function (axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n};\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  if (shouldShowAllLabels(axisModel.axis)) {\n    return;\n  } // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n\n\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction createTicks(ticksCoords, tickTransform, tickEndCoord, tickLineStyle, aniid) {\n  var tickEls = [];\n  var pt1 = [];\n  var pt2 = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = tickEndCoord;\n\n    if (tickTransform) {\n      v2ApplyTransform(pt1, pt1, tickTransform);\n      v2ApplyTransform(pt2, pt2, tickTransform);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line({\n      // Id for animation\n      anid: aniid + '_' + ticksCoords[i].tickValue,\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: tickLineStyle,\n      z2: 2,\n      silent: true\n    });\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisMajorTicks(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var tickModel = axisModel.getModel('axisTick');\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickEndCoord = opt.tickDirection * tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var ticksEls = createTicks(ticksCoords, axisBuilder._transform, tickEndCoord, defaults(lineStyleModel.getLineStyle(), {\n    stroke: axisModel.get('axisLine.lineStyle.color')\n  }), 'ticks');\n\n  for (var i = 0; i < ticksEls.length; i++) {\n    axisBuilder.group.add(ticksEls[i]);\n  }\n\n  return ticksEls;\n}\n\nfunction buildAxisMinorTicks(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var minorTickModel = axisModel.getModel('minorTick');\n\n  if (!minorTickModel.get('show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var minorTicksCoords = axis.getMinorTicksCoords();\n\n  if (!minorTicksCoords.length) {\n    return;\n  }\n\n  var lineStyleModel = minorTickModel.getModel('lineStyle');\n  var tickEndCoord = opt.tickDirection * minorTickModel.get('length');\n  var minorTickLineStyle = defaults(lineStyleModel.getLineStyle(), defaults(axisModel.getModel('axisTick').getLineStyle(), {\n    stroke: axisModel.get('axisLine.lineStyle.color')\n  }));\n\n  for (var i = 0; i < minorTicksCoords.length; i++) {\n    var minorTicksEls = createTicks(minorTicksCoords[i], axisBuilder._transform, tickEndCoord, minorTickLineStyle, 'minorticks_' + i);\n\n    for (var k = 0; k < minorTicksEls.length; k++) {\n      axisBuilder.group.add(minorTicksEls[k]);\n    }\n  }\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories && axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isLabelSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;"],"sourceRoot":""}