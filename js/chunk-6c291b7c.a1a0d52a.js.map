{"version":3,"sources":["webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/echarts/lib/component/axis/axisSplitHelper.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/echarts/lib/component/axis.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js"],"names":["echarts","zrUtil","graphic","extendComponentView","type","render","gridModel","ecModel","this","group","removeAll","get","add","Rect","shape","coordinateSystem","getRect","style","defaults","fill","getItemStyle","silent","z2","registerPreprocessor","option","xAxis","yAxis","grid","ComponentModel","axisModelCreator","axisModelCommonMixin","AxisModel","extend","axis","init","superApply","arguments","resetRange","mergeOption","restoreData","getCoordSysModel","queryComponents","mainType","index","gridIndex","id","gridId","getAxisType","axisDim","data","merge","prototype","extraOption","offset","_default","module","exports","rectCoordAxisBuildSplitArea","axisView","axisGroup","axisModel","scale","isBlank","splitAreaModel","getModel","areaStyleModel","areaColors","gridRect","ticksCoords","getTicksCoords","tickModel","clamp","length","areaColorsLen","lastSplitAreaColors","__splitAreaColors","newSplitAreaColors","createHashMap","colorIndex","i","cIndex","tickValue","prev","toGlobalCoord","coord","areaStyle","getAreaStyle","isArray","x","y","width","height","tickCoord","isHorizontal","set","anid","rectCoordAxisHandleRemove","_config","_util","__DEV__","isObject","each","map","indexOf","_layout","retrieve","getLayoutRect","_axisHelper","createScaleByModel","ifAxisCrossZero","niceScaleExtent","estimateLabelUnionRect","Cartesian2D","Axis2D","CoordinateSystem","_dataStackHelper","getStackedDimension","isAxisUsedInTheGrid","Grid","api","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","model","gridProto","fixAxisOnZero","axesMap","otherAxisDim","onZeroRecords","getAxesOnZeroOf","otherAxisOnZeroOf","otherAxes","onZero","onZeroAxisIndex","canOnZeroToAxis","idx","hasOwnProperty","getOnZeroRecordKey","dim","updateAxisTransform","coordBase","axisExtent","getExtent","axisExtentSum","toLocalCoord","axisPointerEnabled","_rect","update","_updateScale","resize","ignoreContainLabel","getBoxLayoutParams","getWidth","getHeight","axesList","adjustAxes","extent","inverse","setExtent","labelUnionRect","margin","position","getAxis","axisType","axisIndex","axesMapOnDim","name","getAxes","slice","getCartesian","xAxisIndex","yAxisIndex","key","coordList","getCartesians","convertToPixel","finder","value","target","_findConvertTarget","cartesian","dataToPoint","dataToCoord","convertFromPixel","pointToData","coordToData","seriesModel","xAxisModel","getReferringComponents","yAxisModel","coordsList","componentIndex","containPoint","point","axisPositionUsed","left","right","top","bottom","axesCount","eachComponent","createAxisCreator","axisPosition","isCategory","onBand","push","addAxis","unionExtent","mapDimension","unionExtentFromData","Infinity","eachSeries","isCartesian2D","axesModels","findAxesModels","getData","getTooltipAxes","baseAxes","baseAxis","getBaseAxis","otherAxis","getOtherAxis","axesTypes","create","grids","dimensions","register","defaultOption","show","zlevel","z","nameLocation","nameRotate","nameTruncate","maxWidth","ellipsis","placeholder","nameTextStyle","nameGap","triggerEvent","tooltip","axisPointer","axisLine","lineStyle","color","symbol","symbolSize","axisTick","inside","axisLabel","rotate","showMinLabel","showMaxLabel","fontSize","splitLine","splitArea","axisDefault","categoryAxis","boundaryGap","deduplication","alignWithLabel","interval","valueAxis","splitNumber","minorTick","minorSplitLine","timeAxis","min","max","logAxis","logBase","dependencies","layoutMode","containLabel","backgroundColor","borderWidth","borderColor","getLayoutParams","mergeLayoutParam","OrdinalMeta","AXIS_TYPES","axisName","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","mergeDefaultAndTheme","inputPositionParams","themeModel","getTheme","getDefaultOption","optionUpdated","thisOption","__ordinalMeta","createByAxisModel","getCategories","rawData","categories","getOrdinalMeta","mergeAll","registerSubTypeDefaulter","curry","BoundingRect","Cartesian","call","constructor","getAxesByScale","axisX","axisY","contain","containData","reserved","out","clampData","xScale","yScale","xAxisExtent","yAxisExtent","parse","Math","getArea","xExtent","getGlobalExtent","yExtent","rect","inherits","dimAxisMapper","_axes","_dimList","scaleType","toLowerCase","filter","val","_dataCoordConvert","input","method","dimList","output","Array","Axis","coordExtent","asc","ret","reverse","AxisBuilder","AxisView","cartesianAxisHelper","_axisSplitHelper","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","axisPointerClass","payload","oldAxisGroup","_axisGroup","Group","layout","axisBuilder","getGroup","groupTransition","superCall","remove","_splitLine","splitLineModel","lineStyleModel","lineColors","lineCount","p1","p2","getLineStyle","Line","subPixelOptimize","x1","y1","x2","y2","stroke","_minorSplitLine","minorSplitLineModel","minorTicksCoords","getMinorTicksCoords","k","_splitArea"],"mappings":"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","file":"js/chunk-6c291b7c.a1a0d52a.js","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, gridModel) {\n  var axis = axisModel.axis;\n\n  if (axis.scale.isBlank()) {\n    return;\n  }\n\n  var splitAreaModel = axisModel.getModel('splitArea');\n  var areaStyleModel = splitAreaModel.getModel('areaStyle');\n  var areaColors = areaStyleModel.get('color');\n  var gridRect = gridModel.coordinateSystem.getRect();\n  var ticksCoords = axis.getTicksCoords({\n    tickModel: splitAreaModel,\n    clamp: true\n  });\n\n  if (!ticksCoords.length) {\n    return;\n  } // For Making appropriate splitArea animation, the color and anid\n  // should be corresponding to previous one if possible.\n\n\n  var areaColorsLen = areaColors.length;\n  var lastSplitAreaColors = axisView.__splitAreaColors;\n  var newSplitAreaColors = zrUtil.createHashMap();\n  var colorIndex = 0;\n\n  if (lastSplitAreaColors) {\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n      if (cIndex != null) {\n        colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n        break;\n      }\n    }\n  }\n\n  var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n  var areaStyle = areaStyleModel.getAreaStyle();\n  areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n  for (var i = 1; i < ticksCoords.length; i++) {\n    var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n    var x;\n    var y;\n    var width;\n    var height;\n\n    if (axis.isHorizontal()) {\n      x = prev;\n      y = gridRect.y;\n      width = tickCoord - x;\n      height = gridRect.height;\n      prev = x + width;\n    } else {\n      x = gridRect.x;\n      y = prev;\n      width = gridRect.width;\n      height = tickCoord - y;\n      prev = y + height;\n    }\n\n    var tickValue = ticksCoords[i - 1].tickValue;\n    tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n    axisGroup.add(new graphic.Rect({\n      anid: tickValue != null ? 'area_' + tickValue : null,\n      shape: {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      },\n      style: zrUtil.defaults({\n        fill: areaColors[colorIndex]\n      }, areaStyle),\n      silent: true\n    }));\n    colorIndex = (colorIndex + 1) % areaColorsLen;\n  }\n\n  axisView.__splitAreaColors = newSplitAreaColors;\n}\n\nfunction rectCoordAxisHandleRemove(axisView) {\n  axisView.__splitAreaColors = null;\n}\n\nexports.rectCoordAxisBuildSplitArea = rectCoordAxisBuildSplitArea;\nexports.rectCoordAxisHandleRemove = rectCoordAxisHandleRemove;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, Array.<module:echarts/coord/cartesian/Axis2D>>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  }); // Key: axisDim_axisIndex, value: boolean, whether onZero target.\n\n  var onZeroRecords = {};\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis, onZeroRecords);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis, onZeroRecords);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis, onZeroRecords) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxisOnZeroOf ? [otherAxisOnZeroOf] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxisOnZeroOf;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxisOnZeroOf = otherAxes[onZeroAxisIndex];\n    }\n  } else {\n    // Find the first available other axis.\n    for (var idx in otherAxes) {\n      if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx]) // Consider that two Y axes on one value axis,\n      // if both onZero, the two Y axes overlap.\n      && !onZeroRecords[getOnZeroRecordKey(otherAxes[idx])]) {\n        otherAxisOnZeroOf = otherAxes[idx];\n        break;\n      }\n    }\n  }\n\n  if (otherAxisOnZeroOf) {\n    onZeroRecords[getOnZeroRecordKey(otherAxisOnZeroOf)] = true;\n  }\n\n  function getOnZeroRecordKey(axis) {\n    return axis.dim + '_' + axis.index;\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = axisPositionUsed.bottom ? 'top' : 'bottom';\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = axisPositionUsed.left ? 'right' : 'left';\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5,\n  // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n  minorTick: {\n    // Minor tick, not available for cateogry axis.\n    show: false,\n    // Split number of minor ticks. The value should be in range of (0, 100)\n    splitNumber: 5,\n    // Lenght of minor tick\n    length: 3,\n    // Same inside with axisTick\n    // Line style\n    lineStyle: {// Default to be same with axisTick\n    }\n  },\n  minorSplitLine: {\n    show: false,\n    lineStyle: {\n      color: '#eee',\n      width: 1\n    }\n  }\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Cartesian = require(\"./Cartesian\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  },\n\n  /**\n   * Get rect area of cartesian.\n   * Area will have a contain function to determine if a point is in the coordinate system.\n   * @return {BoundingRect}\n   */\n  getArea: function () {\n    var xExtent = this.getAxis('x').getGlobalExtent();\n    var yExtent = this.getAxis('y').getGlobalExtent();\n    var x = Math.min(xExtent[0], xExtent[1]);\n    var y = Math.min(yExtent[0], yExtent[1]);\n    var width = Math.max(xExtent[0], xExtent[1]) - x;\n    var height = Math.max(yExtent[0], yExtent[1]) - y;\n    var rect = new BoundingRect(x, y, width, height);\n    return rect;\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar _axisSplitHelper = require(\"./axisSplitHelper\");\n\nvar rectCoordAxisBuildSplitArea = _axisSplitHelper.rectCoordAxisBuildSplitArea;\nvar rectCoordAxisHandleRemove = _axisSplitHelper.rectCoordAxisHandleRemove;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine', 'minorSplitLine'];\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function () {\n    rectCoordAxisHandleRemove(this);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        subPixelOptimize: true,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _minorSplitLine: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n    var minorSplitLineModel = axisModel.getModel('minorSplitLine');\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var minorTicksCoords = axis.getMinorTicksCoords();\n\n    if (!minorTicksCoords.length) {\n      return;\n    }\n\n    var p1 = [];\n    var p2 = [];\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < minorTicksCoords.length; i++) {\n      for (var k = 0; k < minorTicksCoords[i].length; k++) {\n        var tickCoord = axis.toGlobalCoord(minorTicksCoords[i][k].coord);\n\n        if (isHorizontal) {\n          p1[0] = tickCoord;\n          p1[1] = gridRect.y;\n          p2[0] = tickCoord;\n          p2[1] = gridRect.y + gridRect.height;\n        } else {\n          p1[0] = gridRect.x;\n          p1[1] = tickCoord;\n          p2[0] = gridRect.x + gridRect.width;\n          p2[1] = tickCoord;\n        }\n\n        this._axisGroup.add(new graphic.Line({\n          anid: 'minor_line_' + minorTicksCoords[i][k].tickValue,\n          subPixelOptimize: true,\n          shape: {\n            x1: p1[0],\n            y1: p1[1],\n            x2: p2[0],\n            y2: p2[1]\n          },\n          style: lineStyle,\n          silent: true\n        }));\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel) {\n    rectCoordAxisBuildSplitArea(this, this._axisGroup, axisModel, gridModel);\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});"],"sourceRoot":""}